mut_gaus(temp, 0.1, 0.1^2)
temp
temp
mut_gaus(temp, 0.5, 0.1^2)
0.5^2
mut_gaus(temp, 0.5, 0.5^2)
mut_gaus(temp, 0.5, 0.5^2)
mut_gaus(temp, 0.5, 0.5^2)
mut_gaus(temp, 0.5, 0.5^2)
mut_gaus(temp, 0.5, 0.5^2)
mut_gaus(temp, 0.5, 0.5^2)
temp <- c(0,1,0,1,0,0,0,0,0)
mut_gaus <- function(mat, mut_avg, mut_sd) {
mat_mut <- mat
mut_rate = rnorm(1, mut_avg, mut_sd)
for (i in 1:length(mat_mut)) {
curr = mat_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
mat_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
mat_mut[i] = 0
}
}
return(mat_mut)
}
mut_gaus(temp, 0.5, 0.5^2)
mut_gaus(temp, 0.5, 0.1)
temp
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
mut_gaus(temp, 0.5, 0.1)
temp
temp
mut_gaus <- function(mat, mut_avg, mut_sd) {
mat_mut <- mat
mut_rate = rnorm(1, mut_avg, mut_sd)
for (i in 1:length(mat_mut)) {
curr = mat_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
mat_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
mat_mut[i] = 0
}
}
return(mat_mut)
}
mut_gaus(temp, 0.5, 0.1)
length(temp) * 0.1
temp
length(temp)
length(temp) * 0.1
rpois(1,0.1)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1,1000)
rpois(1, length(temp)*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
rpois(1, 1000*0.1)
total_mut
10000/10
10/10000
mut_pois <- function(mat, mut_avg) {
mat_mut <- mat
# Get mutation rate
mut_rate = rpois(1, length(temp)*mut_avg)/length(temp)
for (i in 1:length(mat_mut)) {
curr = mat_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
mat_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
mat_mut[i] = 0
}
}
return(mat_mut)
}
mut_pois(temp, 0.1)
mut_pois(temp, 0.1)
mut_pois(temp, 0.1)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_pop
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
print("Define mut_rate_sd if Gaussian mutation distribution selected.")
break
}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(org_mut)
}
temp <- c(0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1)
mutation(temp, "poisson")
mutation(temp, "poisson", mut_rate_avg = 0.1)
mutation(temp, "poisson", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
print("Define mut_rate_sd if Gaussian mutation distribution selected.")
break
}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(org_mut)
}
temp <- c(0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "constant", mut_rate_avg = 0.1)
mutation(temp, "gaussian", mut_rate_avg = 0.1)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break
}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(org_mut)
}
mutation(temp, "gaussian", mut_rate_avg = 0.1)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
print("hi")
break
}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(org_mut)
}
mutation(temp, "gaussian", mut_rate_avg = 0.1)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break
}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(org_mut)
}
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break
}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(org_mut)
}
temp <- c(0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1)
mutation(temp, "gaussian", mut_rate_avg = 0.1)
mutation(temp, "gaussian", mut_rate_avg = 0.1, mut_rate_sd = 0.01)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(matrix(org_mut, ncol = ncol(organism), nrow = nrow(organism) ))
}
mutation(c(1,1,1,1,1,1,1,1,1,1,1), "constant", 0.1)
mutation(c(1,1,1,1,1,1,1,1,1,1,1), "constant", 0.5)
mutation(c(1,1,1,1,1,1,1,1,0,1,1), "constant", 0.5)
temp
temp %>% length()
temp %>% matrix(nrow = 8)
temp %>% matrix(nrow = 8) %>% as.numeric()
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism %>% as.numeric()
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
return(matrix(org_mut, ncol = ncol(organism), nrow = nrow(organism) ))
}
temp <- matric(c(1,1,1,1,1,1,1,1,1,1,1,1), nrow = 2)
temp <- matrix(c(1,1,1,1,1,1,1,1,1,1,1,1), nrow = 2)
temp
temp <- matrix(c(1,1,1,1,1,1,1,1,1,1,1,1), nrow = 3)
temp
mutation(temp, "constant", 0.5)
mutation(temp, "constant", 0.5)
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism %>% as.numeric()
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == 0) {
org_mut[i] = 1 }
if(mut == TRUE & curr == 1) {
org_mut[i] = 0
}
}
org_mut <- matrix(org_mut, ncol = ncol(organism), nrow = nrow(organism))
return(org_mut)
}
glider
orgo@cells
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- organism %>% as.numeric()
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == FALSE) {
org_mut[i] = TRUE }
if(mut == TRUE & curr == TRUE) {
org_mut[i] = FALSE }
}
org_mut <- matrix(org_mut, ncol = ncol(organism), nrow = nrow(organism))
return(org_mut)
}
temp <- c(T, T, T, T, T, T, T) %>% as.matrix(nrow = 3)
temp
temp <- c(T, T, T, T, T, T, T) %>% as.matrix(nrow = 2)
temp
temp <- c(T, T, T, T, T, T, T,T) %>% as.matrix(nrow = 2)
temp
temp <- c(T, T, T, T, T, T, T,T) %>% as.matrix(nrow = 2, ncol = 4)
temp
temp <- c(1,1,1,1,1,1,0,0,0,0) %>% as.matrix(nrow = 2)
temp
temp <- c(1,1,1,1,1,1,0,0,0,0) %>% matrix(nrow = 2)
temp
temp <- c(T,T,T,T,F,F,F,T,T) %>% matrix(nrow = 2)
temp <- c(T,T,T,T,F,F,F,T,T,F) %>% matrix(nrow = 2)
temp
temp %>% as.logical()
mutation <- function(organism, md = c("constant", "guassian", "poisson"), mut_rate_avg, mut_rate_sd= NULL) {
# Create matrix to mutate
org_mut <- as.logical(organism)
# Get mutation rate
if(md == "constant"){
mut_rate = mut_rate_avg
}
if(md == "gaussian") {
if(is.null(mut_rate_sd)) {
return("Define mut_rate_sd if Gaussian mutation distribution selected.")
break}
mut_rate = rnorm(1, mut_rate_avg, mut_rate_sd)
}
if(md == "poisson") {
mut_rate = rpois(1, length(org_mut)*mut_rate_avg)/length(org_mut)
}
# Mutate the organism
for (i in 1:length(org_mut)) {
curr = org_mut[i]
mut = sample(c(TRUE, FALSE), 1, replace = TRUE, prob = c(mut_rate, 1-mut_rate))
if(mut == FALSE) {
next}
if(mut == TRUE & curr == FALSE) {
org_mut[i] = TRUE }
if(mut == TRUE & curr == TRUE) {
org_mut[i] = FALSE }
}
org_mut <- matrix(org_mut, ncol = ncol(organism), nrow = nrow(organism))
return(org_mut)
}
temp <- c(T,T,T,T,F,F,F,T,T,F) %>% matrix(nrow = 2)
temp
mutation(temp, "constant", 0.3)
getwd()
setwd("~/my_things/REvolution")
library("REvolution")
